# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command

38 10 * * * cd /home/cleung/git-repos/oicr-sandbox/aws/cost_reporting && . ./env_vars.sh 1> ./0stdout 2> ./0stderr && /usr/bin/python /home/cleung/git-repos/oicr-sandbox/aws/cost_reporting/cost_reporting_data.py 1> ./1stdout 2> ./1stderr && /usr/bin/python /home/cleung/git-repos/oicr-sandbox/aws/cost_reporting/usage_data.py 1> ./2stdout 2> ./2stderr && /usr/bin/python /home/cleung/git-repos/oicr-sandbox/aws/cost_reporting/reports_to_bucket.py 1> ./3stdout 2> ./3stderr
